This repo was created with the express purpose of shamelessly leeching code found in the wild.

To this end, I adopt various strategies for attributing 3rd party code:

Foremost is "Fork + hack'n'slash": In those instances, git logs serve as canonical records of provenance.

Another pattern involves copying small pieces of existing open source content rather than creating an explicit
fork to consume the functionality.  The primary reasons for this approach are
1) I want to encourage myself to internalize and regurgitate various newly found gems and make them first
   class citizens of my mind, and
2) I give myself permission to be lazy every now and then.

When code snippets are copied and pasted from other sources, I will try my best to do the following:
    1) Near the location the copied code is being used, I will add a comment indicating that the code's provenance.
    2) I will add an entry in this file, which will be organized by date, also recording provenance, and providing
    some plain language commentary of what I was thinking:  why I was interested in this piece of code, why did I chose
    to copy (which is essentially an anti-social behavior indicating I am not so interested in upstream changes),
    to what extent I plan to hack it in the future, and so forth.

Lifted Code
-----------------

Nov 2016
===========================

------------------
Code to search for modules
Source: https://github.com/JuliaLang/julia/blob/d80ad6e197daa65af680a2921938be31e294f1d8/base/REPLCompletions.jl#L490

Ultimately I highly refactored, and was not convenient to fork regardless
-------------------


-------------------
HMAC package
Source: https://github.com/staticfloat/Nettle.jl/blob/e86978f1814b93deae90406584e058540c22ad54/src/hmac.jl

The original repo had a slightly different main goal (i.e. wrapping libnettle).  Had to refactor to make
it work with my personal fork of SHA.jl (by the same uathor).  Todo: should let the author know in case he would find it useful,
but the current code is a little ugly
-------------------

--------------------
iTerm2/REPLSparkle Packages
Source: https://github.com/Keno/ReplExtensions.jl
Original code needed significant love and attention.  Also, want to change the semantics, add features, etc
--------------------
